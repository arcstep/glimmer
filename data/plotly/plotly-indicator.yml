animatable: yes
attributes:
  align:
    description: 'Sets the horizontal alignment of the `text` within the box. Note
      that this attribute has no effect if an angular gauge is displayed: in this
      case, it is always centered'
    editType: plot
    valType: enumerated
    values:
    - left
    - center
    - right
  customdata:
    description: Assigns extra data each datum. This may be useful when listening
      to hover, click and selection events. Note that, *scatter* traces also appends
      customdata items in the markers DOM elements
    editType: calc
    valType: data_array
  customdatasrc:
    description: Sets the source reference on Chart Studio Cloud for  customdata .
    editType: none
    valType: string
  delta:
    decreasing:
      color:
        description: Sets the color for increasing value.
        dflt: '#FF4136'
        editType: plot
        valType: color
      editType: plot
      role: object
      symbol:
        description: Sets the symbol to display for increasing value
        dflt: ▼
        editType: plot
        valType: string
    editType: calc
    font:
      color:
        editType: plot
        valType: color
      description: Set the font used to display the delta
      editType: plot
      family:
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
          or on-premise) generates images on a server, where only a select number
          of fonts are installed and supported. These include *Arial*, *Balto*, *Courier
          New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old
          Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times
          New Roman*.
        editType: plot
        noBlank: yes
        strict: yes
        valType: string
      role: object
      size:
        editType: plot
        min: 1
        valType: number
    increasing:
      color:
        description: Sets the color for increasing value.
        dflt: '#3D9970'
        editType: plot
        valType: color
      editType: plot
      role: object
      symbol:
        description: Sets the symbol to display for increasing value
        dflt: ▲
        editType: plot
        valType: string
    position:
      description: Sets the position of delta with respect to the number.
      dflt: bottom
      editType: plot
      valType: enumerated
      values:
      - top
      - bottom
      - left
      - right
    reference:
      description: Sets the reference value to compute the delta. By default, it is
        set to the current value.
      editType: calc
      valType: number
    relative:
      description: Show relative change
      dflt: no
      editType: plot
      valType: boolean
    role: object
    valueformat:
      description: 'Sets the value formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/tree/v1.4.5#d3-format.'
      editType: plot
      valType: string
  domain:
    column:
      description: If there is a layout grid, use the domain for this column in the
        grid for this indicator trace .
      dflt: 0
      editType: calc
      min: 0
      valType: integer
    editType: calc
    role: object
    row:
      description: If there is a layout grid, use the domain for this row in the grid
        for this indicator trace .
      dflt: 0
      editType: calc
      min: 0
      valType: integer
    x:
      description: Sets the horizontal domain of this indicator trace (in plot fraction).
      dflt:
      - 0
      - 1
      editType: calc
      items:
        editType:
        - calc
        - calc
        max:
        - 1
        - 1
        min:
        - 0
        - 0
        valType:
        - number
        - number
      valType: info_array
    'y':
      description: Sets the vertical domain of this indicator trace (in plot fraction).
      dflt:
      - 0
      - 1
      editType: calc
      items:
        editType:
        - calc
        - calc
        max:
        - 1
        - 1
        min:
        - 0
        - 0
        valType:
        - number
        - number
      valType: info_array
  gauge:
    axis:
      dtick:
        description: Sets the step in-between ticks on this axis. Use with `tick0`.
          Must be a positive number, or special strings available to *log* and *date*
          axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick)
          where n is the tick number. For example, to set a tick mark at 1, 10, 100,
          1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick
          to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
          or 0.69897000433. *log* has several special values; *L<f>*, where `f` is
          a positive number, gives ticks linearly spaced in value (but not position).
          For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6,
          1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all
          digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If
          the axis `type` is *date*, then you must convert the time to milliseconds.
          For example, to set the interval between ticks to one day, set `dtick` to
          86400000.0. *date* also has special values *M<n>* gives ticks spaced by
          a number of months. `n` must be a positive integer. To set ticks on the
          15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*.
          To set ticks every 4 years, set `dtick` to *M48*
        editType: plot
        impliedEdits:
          tickmode: linear
        valType: any
      editType: plot
      exponentformat:
        description: Determines a formatting rule for the tick exponents. For example,
          consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000.
          If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script).
          If *SI*, 1G. If *B*, 1B.
        dflt: B
        editType: plot
        valType: enumerated
        values:
        - none
        - e
        - E
        - power
        - SI
        - B
      minexponent:
        description: Hide SI prefix for 10^n if |n| is below this number. This only
          has an effect when `tickformat` is *SI* or *B*.
        dflt: 3
        editType: plot
        min: 0
        valType: number
      nticks:
        description: Specifies the maximum number of ticks for the particular axis.
          The actual number of ticks will be chosen automatically to be less than
          or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*.
        dflt: 0
        editType: plot
        min: 0
        valType: integer
      range:
        description: Sets the range of this axis.
        editType: plot
        items:
          editType:
          - plot
          - plot
          valType:
          - number
          - number
        valType: info_array
      role: object
      separatethousands:
        description: If "true", even 4-digit integers are separated
        dflt: no
        editType: plot
        valType: boolean
      showexponent:
        description: If *all*, all exponents are shown besides their significands.
          If *first*, only the exponent of the first tick is shown. If *last*, only
          the exponent of the last tick is shown. If *none*, no exponents appear.
        dflt: all
        editType: plot
        valType: enumerated
        values:
        - all
        - first
        - last
        - none
      showticklabels:
        description: Determines whether or not the tick labels are drawn.
        dflt: yes
        editType: plot
        valType: boolean
      showtickprefix:
        description: If *all*, all tick labels are displayed with a prefix. If *first*,
          only the first tick is displayed with a prefix. If *last*, only the last
          tick is displayed with a suffix. If *none*, tick prefixes are hidden.
        dflt: all
        editType: plot
        valType: enumerated
        values:
        - all
        - first
        - last
        - none
      showticksuffix:
        description: Same as `showtickprefix` but for tick suffixes.
        dflt: all
        editType: plot
        valType: enumerated
        values:
        - all
        - first
        - last
        - none
      tick0:
        description: Sets the placement of the first tick on this axis. Use with `dtick`.
          If the axis `type` is *log*, then you must take the log of your starting
          tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except
          when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*,
          it should be a date string, like date data. If the axis `type` is *category*,
          it should be a number, using the scale where each category is assigned a
          serial number from zero in the order it appears.
        editType: plot
        impliedEdits:
          tickmode: linear
        valType: any
      tickangle:
        description: Sets the angle of the tick labels with respect to the horizontal.
          For example, a `tickangle` of -90 draws the tick labels vertically.
        dflt: auto
        editType: plot
        valType: angle
      tickcolor:
        description: Sets the tick color.
        dflt: '#444'
        editType: plot
        valType: color
      tickfont:
        color:
          editType: plot
          valType: color
        description: Sets the color bar's tick label font
        editType: plot
        family:
          description: HTML font family - the typeface that will be applied by the
            web browser. The web browser will only be able to apply a font if it is
            available on the system which it operates. Provide multiple font families,
            separated by commas, to indicate the preference in which to apply fonts
            if they aren't available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
            or on-premise) generates images on a server, where only a select number
            of fonts are installed and supported. These include *Arial*, *Balto*,
            *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas
            One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*,
            *Times New Roman*.
          editType: plot
          noBlank: yes
          strict: yes
          valType: string
        role: object
        size:
          editType: plot
          min: 1
          valType: number
      tickformat:
        description: 'Sets the tick label formatting rule using d3 formatting mini-languages
          which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/tree/v1.4.5#d3-format.
          And for dates see: https://github.com/d3/d3-time-format/tree/v2.2.3#locale_format.
          We add two items to d3''s date formatter: *%h* for half of the year as a
          decimal number as well as *%{n}f* for fractional seconds with n digits.
          For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would
          display *09~15~23.46*'
        dflt: ''
        editType: plot
        valType: string
      tickformatstops:
        items:
          tickformatstop:
            dtickrange:
              description: range [*min*, *max*], where *min*, *max* - dtick values
                which describe some zoom level, it is possible to omit *min* or *max*
                value by passing *null*
              editType: plot
              items:
                editType:
                - plot
                - plot
                valType:
                - any
                - any
              valType: info_array
            editType: plot
            enabled:
              description: Determines whether or not this stop is used. If `false`,
                this stop is ignored even within its `dtickrange`.
              dflt: yes
              editType: plot
              valType: boolean
            name:
              description: 'When used in a template, named items are created in the
                output figure in addition to any items the figure already has in this
                array. You can modify these items in the output figure by making your
                own item with `templateitemname` matching this `name` alongside your
                modifications (including `visible: false` or `enabled: false` to hide
                it). Has no effect outside of a template.'
              editType: plot
              valType: string
            role: object
            templateitemname:
              description: 'Used to refer to a named item in this array in the template.
                Named items from the template will be created even without a matching
                item in the input figure, but you can modify one by making an item
                with `templateitemname` matching its `name`, alongside your modifications
                (including `visible: false` or `enabled: false` to hide it). If there
                is no template or no matching item, this item will be hidden unless
                you explicitly show it with `visible: true`.'
              editType: plot
              valType: string
            value:
              description: string - dtickformat for described zoom level, the same
                as *tickformat*
              dflt: ''
              editType: plot
              valType: string
        role: object
      ticklen:
        description: Sets the tick length (in px).
        dflt: 5
        editType: plot
        min: 0
        valType: number
      tickmode:
        description: Sets the tick mode for this axis. If *auto*, the number of ticks
          is set via `nticks`. If *linear*, the placement of the ticks is determined
          by a starting position `tick0` and a tick step `dtick` (*linear* is the
          default value if `tick0` and `dtick` are provided). If *array*, the placement
          of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array*
          is the default value if `tickvals` is provided).
        editType: plot
        impliedEdits: {}
        valType: enumerated
        values:
        - auto
        - linear
        - array
      tickprefix:
        description: Sets a tick label prefix.
        dflt: ''
        editType: plot
        valType: string
      ticks:
        description: Determines whether ticks are drawn or not. If **, this axis'
          ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside
          (inside) the axis lines.
        dflt: outside
        editType: plot
        valType: enumerated
        values:
        - outside
        - inside
        - ''
      ticksuffix:
        description: Sets a tick label suffix.
        dflt: ''
        editType: plot
        valType: string
      ticktext:
        description: Sets the text displayed at the ticks position via `tickvals`.
          Only has an effect if `tickmode` is set to *array*. Used with `tickvals`.
        editType: plot
        valType: data_array
      ticktextsrc:
        description: Sets the source reference on Chart Studio Cloud for  ticktext
          .
        editType: none
        valType: string
      tickvals:
        description: Sets the values at which ticks on this axis appear. Only has
          an effect if `tickmode` is set to *array*. Used with `ticktext`.
        editType: plot
        valType: data_array
      tickvalssrc:
        description: Sets the source reference on Chart Studio Cloud for  tickvals
          .
        editType: none
        valType: string
      tickwidth:
        description: Sets the tick width (in px).
        dflt: 1
        editType: plot
        min: 0
        valType: number
      visible:
        description: A single toggle to hide the axis while preserving interaction
          like dragging. Default is true when a cheater plot is present on the axis,
          otherwise false
        dflt: yes
        editType: plot
        valType: boolean
    bar:
      color:
        description: Sets the background color of the arc.
        dflt: green
        editType: plot
        valType: color
      description: Set the appearance of the gauge's value
      editType: calc
      line:
        color:
          description: Sets the color of the line enclosing each sector.
          dflt: '#444'
          editType: plot
          valType: color
        editType: calc
        role: object
        width:
          description: Sets the width (in px) of the line enclosing each sector.
          dflt: 0
          editType: plot
          min: 0
          valType: number
      role: object
      thickness:
        description: Sets the thickness of the bar as a fraction of the total thickness
          of the gauge.
        dflt: 1
        editType: plot
        max: 1
        min: 0
        valType: number
    bgcolor:
      description: Sets the gauge background color.
      editType: plot
      valType: color
    bordercolor:
      description: Sets the color of the border enclosing the gauge.
      dflt: '#444'
      editType: plot
      valType: color
    borderwidth:
      description: Sets the width (in px) of the border enclosing the gauge.
      dflt: 1
      editType: plot
      min: 0
      valType: number
    description: The gauge of the Indicator plot.
    editType: plot
    role: object
    shape:
      description: Set the shape of the gauge
      dflt: angular
      editType: plot
      valType: enumerated
      values:
      - angular
      - bullet
    steps:
      items:
        step:
          color:
            description: Sets the background color of the arc.
            editType: plot
            valType: color
          editType: calc
          line:
            color:
              description: Sets the color of the line enclosing each sector.
              dflt: '#444'
              editType: plot
              valType: color
            editType: calc
            role: object
            width:
              description: Sets the width (in px) of the line enclosing each sector.
              dflt: 0
              editType: plot
              min: 0
              valType: number
          name:
            description: 'When used in a template, named items are created in the
              output figure in addition to any items the figure already has in this
              array. You can modify these items in the output figure by making your
              own item with `templateitemname` matching this `name` alongside your
              modifications (including `visible: false` or `enabled: false` to hide
              it). Has no effect outside of a template.'
            editType: none
            valType: string
          range:
            description: Sets the range of this axis.
            editType: plot
            items:
              editType:
              - plot
              - plot
              valType:
              - number
              - number
            valType: info_array
          role: object
          templateitemname:
            description: 'Used to refer to a named item in this array in the template.
              Named items from the template will be created even without a matching
              item in the input figure, but you can modify one by making an item with
              `templateitemname` matching its `name`, alongside your modifications
              (including `visible: false` or `enabled: false` to hide it). If there
              is no template or no matching item, this item will be hidden unless
              you explicitly show it with `visible: true`.'
            editType: calc
            valType: string
          thickness:
            description: Sets the thickness of the bar as a fraction of the total
              thickness of the gauge.
            dflt: 1
            editType: plot
            max: 1
            min: 0
            valType: number
      role: object
    threshold:
      editType: plot
      line:
        color:
          description: Sets the color of the threshold line.
          dflt: '#444'
          editType: plot
          valType: color
        editType: plot
        role: object
        width:
          description: Sets the width (in px) of the threshold line.
          dflt: 1
          editType: plot
          min: 0
          valType: number
      role: object
      thickness:
        description: Sets the thickness of the threshold line as a fraction of the
          thickness of the gauge.
        dflt: 0.85
        editType: plot
        max: 1
        min: 0
        valType: number
      value:
        description: Sets a treshold value drawn as a line.
        dflt: no
        editType: calc
        valType: number
  ids:
    anim: yes
    description: Assigns id labels to each datum. These ids for object constancy of
      data points during animation. Should be an array of strings, not numbers or
      any other type.
    editType: calc
    valType: data_array
  idssrc:
    description: Sets the source reference on Chart Studio Cloud for  ids .
    editType: none
    valType: string
  legendgrouptitle:
    editType: style
    font:
      color:
        editType: style
        valType: color
      description: Sets this legend group's title font.
      editType: style
      family:
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
          or on-premise) generates images on a server, where only a select number
          of fonts are installed and supported. These include *Arial*, *Balto*, *Courier
          New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old
          Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times
          New Roman*.
        editType: style
        noBlank: yes
        strict: yes
        valType: string
      role: object
      size:
        editType: style
        min: 1
        valType: number
    role: object
    text:
      description: Sets the title of the legend group.
      dflt: ''
      editType: style
      valType: string
  legendrank:
    description: Sets the legend rank for this trace. Items and groups with smaller
      ranks are presented on top/left side while with `*reversed* `legend.traceorder`
      they are on bottom/right side. The default legendrank is 1000, so that you can
      use ranks less than 1000 to place certain items before all unranked items, and
      ranks greater than 1000 to go after all unranked items.
    dflt: 1000
    editType: style
    valType: number
  meta:
    arrayOk: yes
    description: Assigns extra meta information associated with this trace that can
      be used in various text attributes. Attributes such as trace `name`, graph,
      axis and colorbar `title.text`, annotation `text` `rangeselector`, `updatemenues`
      and `sliders` `label` text all support `meta`. To access the trace `meta` values
      in an attribute in the same trace, simply use `%{meta[i]}` where `i` is the
      index or key of the `meta` item in question. To access trace `meta` in layout
      attributes, use `%{data[n[.meta[i]}` where `i` is the index or key of the `meta`
      and `n` is the trace index.
    editType: plot
    valType: any
  metasrc:
    description: Sets the source reference on Chart Studio Cloud for  meta .
    editType: none
    valType: string
  mode:
    description: Determines how the value is displayed on the graph. `number` displays
      the value numerically in text. `delta` displays the difference to a reference
      value in text. Finally, `gauge` displays the value graphically on an axis.
    dflt: number
    editType: calc
    flags:
    - number
    - delta
    - gauge
    valType: flaglist
  name:
    description: Sets the trace name. The trace name appear as the legend item and
      on hover.
    editType: style
    valType: string
  number:
    editType: plot
    font:
      color:
        editType: plot
        valType: color
      description: Set the font used to display main number
      editType: plot
      family:
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
          or on-premise) generates images on a server, where only a select number
          of fonts are installed and supported. These include *Arial*, *Balto*, *Courier
          New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old
          Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times
          New Roman*.
        editType: plot
        noBlank: yes
        strict: yes
        valType: string
      role: object
      size:
        editType: plot
        min: 1
        valType: number
    prefix:
      description: Sets a prefix appearing before the number.
      dflt: ''
      editType: plot
      valType: string
    role: object
    suffix:
      description: Sets a suffix appearing next to the number.
      dflt: ''
      editType: plot
      valType: string
    valueformat:
      description: 'Sets the value formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/tree/v1.4.5#d3-format.'
      dflt: ''
      editType: plot
      valType: string
  stream:
    editType: calc
    maxpoints:
      description: Sets the maximum number of points to keep on the plots from an
        incoming stream. If `maxpoints` is set to *50*, only the newest 50 points
        will be displayed on the plot.
      dflt: 500
      editType: calc
      max: 10000
      min: 0
      valType: number
    role: object
    token:
      description: The stream id number links a data trace on a plot with a stream.
        See https://chart-studio.plotly.com/settings for more details.
      editType: calc
      noBlank: yes
      strict: yes
      valType: string
  title:
    align:
      description: Sets the horizontal alignment of the title. It defaults to `center`
        except for bullet charts for which it defaults to right.
      editType: plot
      valType: enumerated
      values:
      - left
      - center
      - right
    editType: plot
    font:
      color:
        editType: plot
        valType: color
      description: Set the font used to display the title
      editType: plot
      family:
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The Chart Studio Cloud (at https://chart-studio.plotly.com
          or on-premise) generates images on a server, where only a select number
          of fonts are installed and supported. These include *Arial*, *Balto*, *Courier
          New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old
          Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times
          New Roman*.
        editType: plot
        noBlank: yes
        strict: yes
        valType: string
      role: object
      size:
        editType: plot
        min: 1
        valType: number
    role: object
    text:
      description: Sets the title of this indicator.
      editType: plot
      valType: string
  transforms:
    items:
      transform:
        description: 'WARNING: All transforms are deprecated and may be removed from
          the API in next major version. An array of operations that manipulate the
          trace data, for example filtering or sorting the data arrays.'
        editType: calc
        role: object
    role: object
  type: indicator
  uid:
    anim: yes
    description: Assign an id to this trace, Use this to provide object constancy
      between traces during animations and transitions.
    editType: plot
    valType: string
  uirevision:
    description: 'Controls persistence of some user-driven changes to the trace: `constraintrange`
      in `parcoords` traces, as well as some `editable: true` modifications such as
      `name` and `colorbar.title`. Defaults to `layout.uirevision`. Note that other
      user-driven trace attribute changes are controlled by `layout` attributes: `trace.visible`
      is controlled by `layout.legend.uirevision`, `selectedpoints` is controlled
      by `layout.selectionrevision`, and `colorbar.(x|y)` (accessible with `config:
      {editable: true}`) is controlled by `layout.editrevision`. Trace changes are
      tracked by `uid`, which only falls back on trace index if no `uid` is provided.
      So if your app can add/remove traces before the end of the `data` array, such
      that the same trace has a different index, you can still preserve user-driven
      changes if you give each trace a `uid` that stays with it as it moves.'
    editType: none
    valType: any
  value:
    anim: yes
    description: Sets the number to be displayed.
    editType: calc
    valType: number
  visible:
    description: Determines whether or not this trace is visible. If *legendonly*,
      the trace is not drawn, but can appear as a legend item (provided that the legend
      itself is visible).
    dflt: yes
    editType: calc
    valType: enumerated
    values:
    - 'TRUE'
    - 'FALSE'
    - legendonly
categories:
- svg
- noOpacity
- noHover
meta:
  description: 'An indicator is used to visualize a single `value` along with some
    contextual information such as `steps` or a `threshold`, using a combination of
    three visual elements: a number, a delta, and/or a gauge. Deltas are taken with
    respect to a `reference`. Gauges can be either angular or bullet (aka linear)
    gauges.'
type: indicator
